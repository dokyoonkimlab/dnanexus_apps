#!/bin/bash
# vcf_pca 0.0.1
# Generated by dx-app-wizard.
#
# Parallelized execution pattern: Your app will generate multiple jobs
# to perform some computation in parallel, followed by a final
# "postprocess" stage that will perform any additional computations as
# necessary.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() or any other entry point is ALWAYS
# executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

set -x

main() {

	echo "Value of bed_in: '$bed_in'"
    echo "Value of bim_in: '$bim_in'"
    echo "Value of fam_in: '$fam_in'"
    echo "Value of prefix: '$prefix'"

    dx download "$bed_in" -o input.bed
    dx download "$bim_in" -o input.bim
    dx download "$fam_in" -o input.fam

	PREFIX=$(dx describe --name "$bed_in" | sed 's/.bed$//')
	if test "$prefix_in"; then
		PREFIX="$prefix_in.$PREFIX"
	fi
	
	# Now, convert the VCF into a PLINK file
	eval plink2 --bfile input --recode vcf --out $PREFIX --allow-no-sex --threads $(nproc --all)
	bgzip -c "$PREFIX.vcf" > "$PREFIX.vcf.gz"
	tabix -p vcf "$PREFIX.vcf.gz"
	
	f=$(dx upload "$PREFIX.vcf.gz" --brief)
	dx-jobutil-add-output vcf_fn "$f" --class=file
	f=$(dx upload "$PREFIX.vcf.gz.tbi" --brief)
	dx-jobutil-add-output vcfidx_fn "$f" --class=file
}
